use cohort_analysis;

-- Let's Explore the Data
SELECT * FROM RETAIL LIMIT 10;

SELECT COUNT(*) FROM retail; -- 512,909

SELECT DISTINCT COUNTRY FROM RETAIL;

SELECT min(Quantity) FROM RETAIL; -- -74,215

SELECT COUNT(*) FROM RETAIL
WHERE QUANTITY <= 0;-- 10,126: Suspicious Records

SELECT COUNT(*) FROM RETAIL
WHERE INVOICENO LIKE 'C%';-- 8,836: Cancalled Orders 

SELECT * FROM RETAIL
WHERE INVOICENO NOT LIKE 'C%' AND QUANTITY <= 0;

SELECT count(*) FROM RETAIL
WHERE INVOICENO NOT LIKE 'C%' AND QUANTITY <= 0; --- 1,290

SELECT COUNT(*) FROM RETAIL
WHERE CUSTOMERID IS NULL;-- 0

SELECT COUNT(*) FROM RETAIL
WHERE CUSTOMERID = ''; -- 128,676


SELECT * FROM RETAIL
WHERE CUSTOMERID = ''
limit 100;

-- Convert Invoicedate from text to date
SELECT
	INVOICEDATE,
    str_to_date(INVOICEDATE, '%m/%d/%Y %H:%i') DATETIME,
    date(str_to_date(INVOICEDATE, '%m/%d/%Y %H:%i')) DATE
FROM RETAIL
LIMIT 10;

SELECT COUNT(*)
FROM RETAIL
where date(str_to_date(INVOICEDATE, '%m/%d/%Y %H:%i')) BETWEEN '2011-12-01' AND '2011-12-31' 
AND CustomerID != ''
AND CustomerID IS NOT NULL; --- 0 : No valid records in December 2011

-- Cohort Analysis [Customer Retention]
WITH CTE1 AS
(SELECT
	CUSTOMERID,
    date(str_to_date(INVOICEDATE, '%m/%d/%Y %H:%i')) AS FORMATTED_DATE,
    ROUND(QUANTITY*UNITPRICE, 2) AS SALE_VALUE
FROM RETAIL
WHERE 
	CUSTOMERID IS NOT NULL
    AND CUSTOMERID != ''
	AND INVOICENO NOT LIKE 'C%'
    AND QUANTITY > 0
    AND UNITPRICE > 0), -- 375,736: Valid Records for Analysis   
CTE2 AS    
(SELECT
	CUSTOMERID,
    FORMATTED_DATE AS PURCHASE_DATE,
    MIN(FORMATTED_DATE) OVER (PARTITION BY CUSTOMERID) AS FIRST_TRANSACTION_DATE
    -- DATE_FORMAT(FORMATTED_DATE, '%Y-%m-01') as PURCHASE_MONTH,
    -- DATE_FORMAT(MIN(FORMATTED_DATE) OVER (PARTITION BY CUSTOMERID), '%Y-%m-01') AS FIRST_TRANSACTION_MONTH
FROM CTE1),
 
CTE3 AS
(SELECT 
	CUSTOMERID,
    FIRST_TRANSACTION_DATE,
    PURCHASE_DATE,
   
	CONCAT(
		'Month_',
		ROUND(DATEDIFF(PURCHASE_DATE, FIRST_TRANSACTION_DATE)/30, 0)
        ) AS COHORT_MONTH,
    DATE_FORMAT(PURCHASE_DATE, '%Y-%m-01') as PURCHASE_MONTH,
    DATE_FORMAT(FIRST_TRANSACTION_DATE, '%Y-%m-01') AS FIRST_TRANSACTION_MONTH
FROM CTE2)

SELECT
	FIRST_TRANSACTION_MONTH AS COHORT,
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_0' THEN CUSTOMERID ELSE NULL END) AS "MONTH_0",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_1' THEN CUSTOMERID ELSE NULL END) AS "MONTH_1",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_2' THEN CUSTOMERID ELSE NULL END) AS "MONTH_2",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_3' THEN CUSTOMERID ELSE NULL END) AS "MONTH_3",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_4' THEN CUSTOMERID ELSE NULL END) AS "MONTH_4",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_5' THEN CUSTOMERID ELSE NULL END) AS "MONTH_5",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_6' THEN CUSTOMERID ELSE NULL END) AS "MONTH_6",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_7' THEN CUSTOMERID ELSE NULL END) AS "MONTH_7",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_8' THEN CUSTOMERID ELSE NULL END) AS "MONTH_8",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_9' THEN CUSTOMERID ELSE NULL END) AS "MONTH_9",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_10' THEN CUSTOMERID ELSE NULL END) AS "MONTH_10",
    COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_11' THEN CUSTOMERID ELSE NULL END) AS "MONTH_11",
	COUNT(DISTINCT CASE WHEN COHORT_MONTH = 'Month_12' THEN CUSTOMERID ELSE NULL END) AS "MONTH_12"
FROM CTE3
GROUP BY FIRST_TRANSACTION_MONTH
ORDER BY FIRST_TRANSACTION_MONTH;

-- Cohort Analysis [Customer Lifetime Value (CLV)]
WITH CTE1 AS
(SELECT
	CUSTOMERID,
    str_to_date(INVOICEDATE, '%m/%d/%Y %H:%i') AS FORMATTED_DATE,
    ROUND(QUANTITY*UNITPRICE, 2) AS SALE_VALUE
FROM RETAIL
WHERE 
	CUSTOMERID IS NOT NULL
    AND CUSTOMERID != ''
	AND INVOICENO NOT LIKE 'C%'
    AND QUANTITY > 0
    AND UNITPRICE > 0), -- 384,641: Valid Records for Analysis
CTE2 AS    
(SELECT
	CUSTOMERID,
    FORMATTED_DATE AS PURCHASE_DATE,
    MIN(FORMATTED_DATE) OVER (PARTITION BY CUSTOMERID) AS FIRST_TRANSACTION_DATE,
    SALE_VALUE
    -- DATE_FORMAT(FORMATTED_DATE, '%Y-%m-01') as PURCHASE_MONTH,
    -- DATE_FORMAT(MIN(FORMATTED_DATE) OVER (PARTITION BY CUSTOMERID), '%Y-%m-01') AS FIRST_TRANSACTION_MONTH
FROM CTE1),

CTE3 AS
(SELECT 
	CUSTOMERID,
    FIRST_TRANSACTION_DATE,
    PURCHASE_DATE,
	SALE_VALUE,
	CONCAT(
		'Month_',
		ROUND(DATEDIFF(PURCHASE_DATE, FIRST_TRANSACTION_DATE)/30, 0)
        ) AS COHORT_MONTH,
    DATE_FORMAT(PURCHASE_DATE, '%Y-%m-01') as PURCHASE_MONTH,
    DATE_FORMAT(FIRST_TRANSACTION_DATE, '%Y-%m-01') AS FIRST_TRANSACTION_MONTH
FROM CTE2)

SELECT
	FIRST_TRANSACTION_MONTH AS COHORT,
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_0' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_0",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_1' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_1",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_2' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_2",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_3' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_3",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_4' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_4",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_5' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_5",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_6' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_6",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_7' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_7",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_8' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_8",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_9' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_9",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_10' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_10",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_11' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_11",
    ROUND(SUM(CASE WHEN COHORT_MONTH = 'Month_12' THEN SALE_VALUE ELSE 0 END),0) AS "MONTH_12"
FROM CTE3
GROUP BY FIRST_TRANSACTION_MONTH
ORDER BY FIRST_TRANSACTION_MONTH;




  
    
    


